{"ast":null,"code":"var _jsxFileName = \"/Users/irenemanas/Desktop/PROJECTS/react-exercises/src/components/ConditionalRender.js\";\nimport React from \"react\";\nimport \"../style/_conditionalRender.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConditionalRender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: true\n    };\n    this.toggleDisplay = this.toggleDisplay.bind(this);\n  }\n\n  toggleDisplay() {\n    this.setState(state => ({\n      display: !state.display\n    }));\n  }\n\n  render() {\n    // Change code below this line\n    if (this.state.display == true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conditional\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleDisplay,\n          children: \"Toggle Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Displayed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conditional\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleDisplay,\n          children: \"Toggle Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default ConditionalRender;","map":{"version":3,"sources":["/Users/irenemanas/Desktop/PROJECTS/react-exercises/src/components/ConditionalRender.js"],"names":["React","ConditionalRender","Component","constructor","props","state","display","toggleDisplay","bind","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;;;AAEA,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AACDD,EAAAA,aAAa,GAAG;AACd,SAAKE,QAAL,CAAeJ,KAAD,KAAY;AACxBC,MAAAA,OAAO,EAAE,CAACD,KAAK,CAACC;AADQ,KAAZ,CAAd;AAGD;;AACDI,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,KAAKL,KAAL,CAAWC,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,MAOO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKA,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AA9B6C;;AAiChD,eAAeN,iBAAf","sourcesContent":["import React from \"react\";\nimport \"../style/_conditionalRender.scss\";\n\nclass ConditionalRender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: true,\n    };\n    this.toggleDisplay = this.toggleDisplay.bind(this);\n  }\n  toggleDisplay() {\n    this.setState((state) => ({\n      display: !state.display,\n    }));\n  }\n  render() {\n    // Change code below this line\n    if (this.state.display == true) {\n      return (\n        <div className='conditional'>\n          <button onClick={this.toggleDisplay}>Toggle Display</button>\n          <h1>Displayed!</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div className='conditional'>\n          <button onClick={this.toggleDisplay}>Toggle Display</button>\n          <h1></h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ConditionalRender;\n"]},"metadata":{},"sourceType":"module"}