{"ast":null,"code":"var _jsxFileName = \"/Users/irenemanas/Desktop/personal-projects/rick-and-morty-spa/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../style/App.scss\";\nimport Logo from \"../images/Rick_MortyLogo.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"all\");\n  useEffect(() => {\n    getDataFromApi().then(data => setCharacters(data));\n  }, []);\n\n  const handleFilter = changedInput => {\n    if (changedInput.key === \"name\") {\n      setName(changedInput.value);\n    } else if (changedInput.key === \"gender\") {\n      setGender(changedInput.value);\n    }\n  };\n\n  const filteredCharacters = characters.filter(character => {\n    return character.name.toUpperCase().includes(name.toUpperCase());\n  }).filter(character => {\n    return gender === \"all\" ? true : character.gender === gender;\n  });\n\n  const renderDetail = props => {\n    const id = parseInt(props.match.params.id);\n    const selectedCharacter = characters.find(character => {\n      return character.id === id;\n    });\n    return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n      character: selectedCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header__logo\",\n        src: Logo,\n        alt: \"Rick and Morty Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Filters, {\n            filterByName: name,\n            handleFilter: handleFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CharacterList, {\n            characters: filteredCharacters,\n            className: \"container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/character/:id\",\n          render: renderDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"XmayaoBXNK6gVlXttawWb41PRoA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/irenemanas/Desktop/personal-projects/rick-and-morty-spa/src/components/App.js"],"names":["Logo","React","useEffect","useState","Route","Switch","Filters","CharacterList","CharacterDetail","getDataFromApi","App","characters","setCharacters","name","setName","gender","setGender","then","data","handleFilter","changedInput","key","value","filteredCharacters","filter","character","toUpperCase","includes","renderDetail","props","id","parseInt","match","params","selectedCharacter","find"],"mappings":"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","sourcesContent":["import \"../style/App.scss\";\nimport Logo from \"../images/Rick_MortyLogo.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport getDataFromApi from \"../services/getDataFromApi\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"all\");\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data));\n  }, []);\n\n  const handleFilter = (changedInput) => {\n    if (changedInput.key === \"name\") {\n      setName(changedInput.value);\n    } else if (changedInput.key === \"gender\") {\n      setGender(changedInput.value);\n    }\n  };\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toUpperCase().includes(name.toUpperCase());\n    })\n    .filter((character) => {\n      return gender === \"all\" ? true : character.gender === gender;\n    });\n\n  const renderDetail = (props) => {\n    const id = parseInt(props.match.params.id);\n    const selectedCharacter = characters.find((character) => {\n      return character.id === id;\n    });\n    return <CharacterDetail character={selectedCharacter} />;\n  };\n  return (\n    <div className='page-column'>\n      <header className='header'>\n        <img className='header__logo' src={Logo} alt='Rick and Morty Logo' />\n      </header>\n      <main className='main'>\n        <Switch>\n          <Route exact path='/'>\n            <Filters filterByName={name} handleFilter={handleFilter} />\n            <CharacterList characters={filteredCharacters} className='container' />\n          </Route>\n          <Route path='/character/:id' render={renderDetail} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}